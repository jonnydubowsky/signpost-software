diff --git a/ServiceConnector.cpp b/ServiceConnector.cpp
index 2b2995e..fe075d4 100644
--- a/ServiceConnector.cpp
+++ b/ServiceConnector.cpp
@@ -516,7 +516,44 @@ void ServiceConnector::do_streamAll(AFE::Gas_Raw_t& gas, Sensor::Reading_Raw_t&
 
 	char* msg_str = msg.toString();
 	char* msg_b64_str = msg.toStringB64();
+//  Serial1.println(msg_str);
 	//M_OUT_MSG
+	{
+		// signpost integration
+		uint8_t buf[64];
+		uint8_t* at = buf;
+		*at++ = 0x35; // Signpost module identifier
+		*at++ = 0x1;  // Module message type
+
+		// uint16_t C02_ppm;
+		*at++ = (co2Model.CO2_ppm >> 8) & 0xff;
+		*at++ = co2Model.CO2_ppm & 0xff;
+
+		// int32_t <- VOC_ppb_t <- VOC_PID_ppb
+		*at++ = (vocModel.VOC_PID_ppb >> 24) & 0xff;
+		*at++ = (vocModel.VOC_PID_ppb >> 16) & 0xff;
+		*at++ = (vocModel.VOC_PID_ppb >> 8) & 0xff;
+		*at++ = (vocModel.VOC_PID_ppb >> 0) & 0xff;
+
+		// int32_t <- VOC_ppb_t <- VOC_IAQ_ppb
+		*at++ = (vocModel.VOC_IAQ_ppb >> 24) & 0xff;
+		*at++ = (vocModel.VOC_IAQ_ppb >> 16) & 0xff;
+		*at++ = (vocModel.VOC_IAQ_ppb >> 8) & 0xff;
+		*at++ = (vocModel.VOC_IAQ_ppb >> 0) & 0xff;
+
+		//  int16_t bar_hum.bar_T  Temp of barometric sensor in C
+		// uint16_t bar_hum.bar_P  Barometric pressure in millibar
+		//  int16_t bar_hum.hum_T  Temp of humidity sensor in C
+		// uint16_t bar_hum.hum_H  Humidity in percent
+		*at++ = (bar_hum.bar_P >> 8) & 0xff;
+		*at++ = (bar_hum.bar_P >> 0) & 0xff;
+		*at++ = (bar_hum.hum_H >> 8) & 0xff;
+		*at++ = (bar_hum.hum_H >> 0) & 0xff;
+
+		// Our board doesn't have AFE module
+
+		Serial1.write(buf, at-buf);
+	}
 	if (ble) {
 		switch(sensor.getConfig()->messageEncodingSD) {
 			case json:
